#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BloodBankManagement
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BloodBankDB")]
	public partial class DB_contextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUserLoginData(UserLoginData instance);
    partial void UpdateUserLoginData(UserLoginData instance);
    partial void DeleteUserLoginData(UserLoginData instance);
    partial void InsertUserAddr(UserAddr instance);
    partial void UpdateUserAddr(UserAddr instance);
    partial void DeleteUserAddr(UserAddr instance);
    partial void InsertUserDtail(UserDtail instance);
    partial void UpdateUserDtail(UserDtail instance);
    partial void DeleteUserDtail(UserDtail instance);
    partial void InsertBloodData(BloodData instance);
    partial void UpdateBloodData(BloodData instance);
    partial void DeleteBloodData(BloodData instance);
    partial void InsertBloodInventory(BloodInventory instance);
    partial void UpdateBloodInventory(BloodInventory instance);
    partial void DeleteBloodInventory(BloodInventory instance);
    partial void InsertUserTempData(UserTempData instance);
    partial void UpdateUserTempData(UserTempData instance);
    partial void DeleteUserTempData(UserTempData instance);
    partial void InsertHistory(History instance);
    partial void UpdateHistory(History instance);
    partial void DeleteHistory(History instance);
    #endregion
		
		public DB_contextDataContext() : 
				base(global::BloodBankManagement.Properties.Settings.Default.BloodBankDBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DB_contextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_contextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_contextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_contextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UserLoginData> UserLoginDatas
		{
			get
			{
				return this.GetTable<UserLoginData>();
			}
		}
		
		public System.Data.Linq.Table<UserAddr> UserAddrs
		{
			get
			{
				return this.GetTable<UserAddr>();
			}
		}
		
		public System.Data.Linq.Table<UserDtail> UserDtails
		{
			get
			{
				return this.GetTable<UserDtail>();
			}
		}
		
		public System.Data.Linq.Table<BloodData> BloodDatas
		{
			get
			{
				return this.GetTable<BloodData>();
			}
		}
		
		public System.Data.Linq.Table<BloodInventory> BloodInventories
		{
			get
			{
				return this.GetTable<BloodInventory>();
			}
		}
		
		public System.Data.Linq.Table<UserTempData> UserTempDatas
		{
			get
			{
				return this.GetTable<UserTempData>();
			}
		}
		
		public System.Data.Linq.Table<History> Histories
		{
			get
			{
				return this.GetTable<History>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
	public partial class UserLoginData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _username;
		
		private string _password;
		
		private string _email;
		
		private int _userroll;
		
		private string _verfication;
		
		private string _confirmVerification;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnuserrollChanging(int value);
    partial void OnuserrollChanged();
    partial void OnverficationChanging(string value);
    partial void OnverficationChanged();
    partial void OnconfirmVerificationChanging(string value);
    partial void OnconfirmVerificationChanged();
    #endregion
		
		public UserLoginData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userroll", DbType="Int NOT NULL")]
		public int userroll
		{
			get
			{
				return this._userroll;
			}
			set
			{
				if ((this._userroll != value))
				{
					this.OnuserrollChanging(value);
					this.SendPropertyChanging();
					this._userroll = value;
					this.SendPropertyChanged("userroll");
					this.OnuserrollChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_verfication", DbType="VarChar(50)")]
		public string verfication
		{
			get
			{
				return this._verfication;
			}
			set
			{
				if ((this._verfication != value))
				{
					this.OnverficationChanging(value);
					this.SendPropertyChanging();
					this._verfication = value;
					this.SendPropertyChanged("verfication");
					this.OnverficationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmVerification", DbType="VarChar(50)")]
		public string confirmVerification
		{
			get
			{
				return this._confirmVerification;
			}
			set
			{
				if ((this._confirmVerification != value))
				{
					this.OnconfirmVerificationChanging(value);
					this.SendPropertyChanging();
					this._confirmVerification = value;
					this.SendPropertyChanged("confirmVerification");
					this.OnconfirmVerificationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAddress")]
	public partial class UserAddr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _addID;
		
		private string _userID;
		
		private string _firstName;
		
		private string _lastName;
		
		private string _mobileNo;
		
		private string _email;
		
		private string _district;
		
		private string _subDistrict;
		
		private string _postalCode;
		
		private string _accountstatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnaddIDChanging(int value);
    partial void OnaddIDChanged();
    partial void OnuserIDChanging(string value);
    partial void OnuserIDChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnmobileNoChanging(string value);
    partial void OnmobileNoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OndistrictChanging(string value);
    partial void OndistrictChanged();
    partial void OnsubDistrictChanging(string value);
    partial void OnsubDistrictChanged();
    partial void OnpostalCodeChanging(string value);
    partial void OnpostalCodeChanged();
    partial void OnaccountstatusChanging(string value);
    partial void OnaccountstatusChanged();
    #endregion
		
		public UserAddr()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int addID
		{
			get
			{
				return this._addID;
			}
			set
			{
				if ((this._addID != value))
				{
					this.OnaddIDChanging(value);
					this.SendPropertyChanging();
					this._addID = value;
					this.SendPropertyChanged("addID");
					this.OnaddIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="VarChar(50)")]
		public string userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="VarChar(50)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="VarChar(50)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobileNo", DbType="VarChar(50)")]
		public string mobileNo
		{
			get
			{
				return this._mobileNo;
			}
			set
			{
				if ((this._mobileNo != value))
				{
					this.OnmobileNoChanging(value);
					this.SendPropertyChanging();
					this._mobileNo = value;
					this.SendPropertyChanged("mobileNo");
					this.OnmobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_district", DbType="VarChar(50)")]
		public string district
		{
			get
			{
				return this._district;
			}
			set
			{
				if ((this._district != value))
				{
					this.OndistrictChanging(value);
					this.SendPropertyChanging();
					this._district = value;
					this.SendPropertyChanged("district");
					this.OndistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subDistrict", DbType="VarChar(50)")]
		public string subDistrict
		{
			get
			{
				return this._subDistrict;
			}
			set
			{
				if ((this._subDistrict != value))
				{
					this.OnsubDistrictChanging(value);
					this.SendPropertyChanging();
					this._subDistrict = value;
					this.SendPropertyChanged("subDistrict");
					this.OnsubDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalCode", DbType="VarChar(50)")]
		public string postalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				if ((this._postalCode != value))
				{
					this.OnpostalCodeChanging(value);
					this.SendPropertyChanging();
					this._postalCode = value;
					this.SendPropertyChanged("postalCode");
					this.OnpostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountstatus", DbType="VarChar(50)")]
		public string accountstatus
		{
			get
			{
				return this._accountstatus;
			}
			set
			{
				if ((this._accountstatus != value))
				{
					this.OnaccountstatusChanging(value);
					this.SendPropertyChanging();
					this._accountstatus = value;
					this.SendPropertyChanged("accountstatus");
					this.OnaccountstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserDtails")]
	public partial class UserDtail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _userID;
		
		private System.Nullable<int> _addressID;
		
		private System.Nullable<int> _bloodID;
		
		private System.Nullable<int> _URoll;
		
		private string _bloodGroup;
		
		private string _accountstatus;
		
		private string _propicture;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnuserIDChanging(string value);
    partial void OnuserIDChanged();
    partial void OnaddressIDChanging(System.Nullable<int> value);
    partial void OnaddressIDChanged();
    partial void OnbloodIDChanging(System.Nullable<int> value);
    partial void OnbloodIDChanged();
    partial void OnURollChanging(System.Nullable<int> value);
    partial void OnURollChanged();
    partial void OnbloodGroupChanging(string value);
    partial void OnbloodGroupChanged();
    partial void OnaccountstatusChanging(string value);
    partial void OnaccountstatusChanged();
    partial void OnpropictureChanging(string value);
    partial void OnpropictureChanged();
    #endregion
		
		public UserDtail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressID", DbType="Int")]
		public System.Nullable<int> addressID
		{
			get
			{
				return this._addressID;
			}
			set
			{
				if ((this._addressID != value))
				{
					this.OnaddressIDChanging(value);
					this.SendPropertyChanging();
					this._addressID = value;
					this.SendPropertyChanged("addressID");
					this.OnaddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloodID", DbType="Int")]
		public System.Nullable<int> bloodID
		{
			get
			{
				return this._bloodID;
			}
			set
			{
				if ((this._bloodID != value))
				{
					this.OnbloodIDChanging(value);
					this.SendPropertyChanging();
					this._bloodID = value;
					this.SendPropertyChanged("bloodID");
					this.OnbloodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URoll", DbType="Int")]
		public System.Nullable<int> URoll
		{
			get
			{
				return this._URoll;
			}
			set
			{
				if ((this._URoll != value))
				{
					this.OnURollChanging(value);
					this.SendPropertyChanging();
					this._URoll = value;
					this.SendPropertyChanged("URoll");
					this.OnURollChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloodGroup", DbType="VarChar(50)")]
		public string bloodGroup
		{
			get
			{
				return this._bloodGroup;
			}
			set
			{
				if ((this._bloodGroup != value))
				{
					this.OnbloodGroupChanging(value);
					this.SendPropertyChanging();
					this._bloodGroup = value;
					this.SendPropertyChanged("bloodGroup");
					this.OnbloodGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountstatus", DbType="VarChar(50)")]
		public string accountstatus
		{
			get
			{
				return this._accountstatus;
			}
			set
			{
				if ((this._accountstatus != value))
				{
					this.OnaccountstatusChanging(value);
					this.SendPropertyChanging();
					this._accountstatus = value;
					this.SendPropertyChanged("accountstatus");
					this.OnaccountstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_propicture", DbType="VarChar(50)")]
		public string propicture
		{
			get
			{
				return this._propicture;
			}
			set
			{
				if ((this._propicture != value))
				{
					this.OnpropictureChanging(value);
					this.SendPropertyChanging();
					this._propicture = value;
					this.SendPropertyChanged("propicture");
					this.OnpropictureChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BloodData")]
	public partial class BloodData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bloodID;
		
		private string _userID;
		
		private string _bloodGroup;
		
		private System.Nullable<int> _bloodReport;
		
		private string _date;
		
		private System.Nullable<int> _month;
		
		private System.Nullable<int> _donated;
		
		private System.Nullable<int> _requested;
		
		private string _accountstatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbloodIDChanging(int value);
    partial void OnbloodIDChanged();
    partial void OnuserIDChanging(string value);
    partial void OnuserIDChanged();
    partial void OnbloodGroupChanging(string value);
    partial void OnbloodGroupChanged();
    partial void OnbloodReportChanging(System.Nullable<int> value);
    partial void OnbloodReportChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    partial void OnmonthChanging(System.Nullable<int> value);
    partial void OnmonthChanged();
    partial void OndonatedChanging(System.Nullable<int> value);
    partial void OndonatedChanged();
    partial void OnrequestedChanging(System.Nullable<int> value);
    partial void OnrequestedChanged();
    partial void OnaccountstatusChanging(string value);
    partial void OnaccountstatusChanged();
    #endregion
		
		public BloodData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloodID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int bloodID
		{
			get
			{
				return this._bloodID;
			}
			set
			{
				if ((this._bloodID != value))
				{
					this.OnbloodIDChanging(value);
					this.SendPropertyChanging();
					this._bloodID = value;
					this.SendPropertyChanged("bloodID");
					this.OnbloodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="VarChar(50)")]
		public string userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloodGroup", DbType="VarChar(50)")]
		public string bloodGroup
		{
			get
			{
				return this._bloodGroup;
			}
			set
			{
				if ((this._bloodGroup != value))
				{
					this.OnbloodGroupChanging(value);
					this.SendPropertyChanging();
					this._bloodGroup = value;
					this.SendPropertyChanged("bloodGroup");
					this.OnbloodGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloodReport", DbType="Int")]
		public System.Nullable<int> bloodReport
		{
			get
			{
				return this._bloodReport;
			}
			set
			{
				if ((this._bloodReport != value))
				{
					this.OnbloodReportChanging(value);
					this.SendPropertyChanging();
					this._bloodReport = value;
					this.SendPropertyChanged("bloodReport");
					this.OnbloodReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="VarChar(50)")]
		public string date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_month", DbType="Int")]
		public System.Nullable<int> month
		{
			get
			{
				return this._month;
			}
			set
			{
				if ((this._month != value))
				{
					this.OnmonthChanging(value);
					this.SendPropertyChanging();
					this._month = value;
					this.SendPropertyChanged("month");
					this.OnmonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donated", DbType="Int")]
		public System.Nullable<int> donated
		{
			get
			{
				return this._donated;
			}
			set
			{
				if ((this._donated != value))
				{
					this.OndonatedChanging(value);
					this.SendPropertyChanging();
					this._donated = value;
					this.SendPropertyChanged("donated");
					this.OndonatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requested", DbType="Int")]
		public System.Nullable<int> requested
		{
			get
			{
				return this._requested;
			}
			set
			{
				if ((this._requested != value))
				{
					this.OnrequestedChanging(value);
					this.SendPropertyChanging();
					this._requested = value;
					this.SendPropertyChanged("requested");
					this.OnrequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountstatus", DbType="VarChar(50)")]
		public string accountstatus
		{
			get
			{
				return this._accountstatus;
			}
			set
			{
				if ((this._accountstatus != value))
				{
					this.OnaccountstatusChanging(value);
					this.SendPropertyChanging();
					this._accountstatus = value;
					this.SendPropertyChanged("accountstatus");
					this.OnaccountstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BloodInventory")]
	public partial class BloodInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _bloodgroup;
		
		private System.Nullable<int> _bloodquantity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnbloodgroupChanging(string value);
    partial void OnbloodgroupChanged();
    partial void OnbloodquantityChanging(System.Nullable<int> value);
    partial void OnbloodquantityChanged();
    #endregion
		
		public BloodInventory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloodgroup", DbType="VarChar(50)")]
		public string bloodgroup
		{
			get
			{
				return this._bloodgroup;
			}
			set
			{
				if ((this._bloodgroup != value))
				{
					this.OnbloodgroupChanging(value);
					this.SendPropertyChanging();
					this._bloodgroup = value;
					this.SendPropertyChanged("bloodgroup");
					this.OnbloodgroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloodquantity", DbType="Int")]
		public System.Nullable<int> bloodquantity
		{
			get
			{
				return this._bloodquantity;
			}
			set
			{
				if ((this._bloodquantity != value))
				{
					this.OnbloodquantityChanging(value);
					this.SendPropertyChanging();
					this._bloodquantity = value;
					this.SendPropertyChanged("bloodquantity");
					this.OnbloodquantityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTempData")]
	public partial class UserTempData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _username;
		
		private string _requestType;
		
		private string _requestStatus;
		
		private string _bloodgroup;
		
		private System.Nullable<int> _quantity;
		
		private string _Date;
		
		private System.Nullable<int> _bloodstatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnrequestTypeChanging(string value);
    partial void OnrequestTypeChanged();
    partial void OnrequestStatusChanging(string value);
    partial void OnrequestStatusChanged();
    partial void OnbloodgroupChanging(string value);
    partial void OnbloodgroupChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnbloodstatusChanging(System.Nullable<int> value);
    partial void OnbloodstatusChanged();
    #endregion
		
		public UserTempData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requestType", DbType="VarChar(50)")]
		public string requestType
		{
			get
			{
				return this._requestType;
			}
			set
			{
				if ((this._requestType != value))
				{
					this.OnrequestTypeChanging(value);
					this.SendPropertyChanging();
					this._requestType = value;
					this.SendPropertyChanged("requestType");
					this.OnrequestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requestStatus", DbType="VarChar(50)")]
		public string requestStatus
		{
			get
			{
				return this._requestStatus;
			}
			set
			{
				if ((this._requestStatus != value))
				{
					this.OnrequestStatusChanging(value);
					this.SendPropertyChanging();
					this._requestStatus = value;
					this.SendPropertyChanged("requestStatus");
					this.OnrequestStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloodgroup", DbType="VarChar(50)")]
		public string bloodgroup
		{
			get
			{
				return this._bloodgroup;
			}
			set
			{
				if ((this._bloodgroup != value))
				{
					this.OnbloodgroupChanging(value);
					this.SendPropertyChanging();
					this._bloodgroup = value;
					this.SendPropertyChanged("bloodgroup");
					this.OnbloodgroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(50)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloodstatus", DbType="Int")]
		public System.Nullable<int> bloodstatus
		{
			get
			{
				return this._bloodstatus;
			}
			set
			{
				if ((this._bloodstatus != value))
				{
					this.OnbloodstatusChanging(value);
					this.SendPropertyChanging();
					this._bloodstatus = value;
					this.SendPropertyChanged("bloodstatus");
					this.OnbloodstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.History")]
	public partial class History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _userID;
		
		private string _requestType;
		
		private System.Nullable<int> _quantity;
		
		private string _date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnuserIDChanging(string value);
    partial void OnuserIDChanged();
    partial void OnrequestTypeChanging(string value);
    partial void OnrequestTypeChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    #endregion
		
		public History()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="VarChar(50)")]
		public string userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requestType", DbType="VarChar(50)")]
		public string requestType
		{
			get
			{
				return this._requestType;
			}
			set
			{
				if ((this._requestType != value))
				{
					this.OnrequestTypeChanging(value);
					this.SendPropertyChanging();
					this._requestType = value;
					this.SendPropertyChanged("requestType");
					this.OnrequestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="VarChar(50)")]
		public string date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
